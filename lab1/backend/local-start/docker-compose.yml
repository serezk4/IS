services:
  redis:
    image: redis:latest
    restart: on-failure
    container_name: local-redis
    ports:
      - "0.0.0.0:6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  postgres:
    image: timescale/timescaledb-ha:pg16
    restart: unless-stopped
    container_name: postgres-local
    ports:
      - "0.0.0.0:1232:5432"
    environment:
      POSTGRES_USER: backend
      POSTGRES_PASSWORD: backend
      POSTGRES_DB: backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.1.3-management
    container_name: ws
    hostname: ws
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
      - "15674:15674"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_management rabbitmq_stomp rabbitmq_web_stomp && rabbitmq-server"
    
