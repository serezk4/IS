spring:
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}

  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}

  flyway:
    schemas: ${DB_SCHEMA}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    locations: classpath:db/migration/prod

  security:
    oauth2:
      client:
        provider:
          keycloak:
            jwk-set-uri: ${KC_ISSUER_URI}/${KC_REALM}/protocol/openid-connect/certs

keycloak:
  server-url: ${KC_SERVER}
  realm: ${KC_REALM}
  client-id: ${KC_CLIENT_ID}
  client-secret: ${KC_CLIENT_SECRET}
  admin-username: ${KC_ADMIN_USERNAME}
  admin-password: ${KC_ADMIN_PASSWORD}
  max-pooled-per-route: ${KC_MAX_POOLED_PER_ROTE}
  connect-timeout: ${KC_CONNECTION_TIMEOUT}
  read-timeout: ${KC_READ_TIMEOUT}

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    org.hibernate.tool.hbm2ddl: DEBUG

redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}